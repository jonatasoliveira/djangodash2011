#!/usr/bin/python
# pyManDNS is a very easy script to Manage yout DNS
#
import sys
import os
sys.path.append(os.path.dirname(os.path.realpath(__file__)) + '/../libs')
import ConfigParser
import re
from sqlalchemy import create_engine, Table, Column, Integer, String, MetaData, ForeignKey
from sqlalchemy.sql.expression import select, delete, insert
from SimpleXMLRPCServer import SimpleXMLRPCServer
from pyManDNS_Tables import *
from pyManDNS_Zones import pyManDNS_Zones
from pyManDNS_ToAPI import pyManDNS_ToAPI

# Parse config file
config = ConfigParser.ConfigParser()
config.read(os.path.dirname(os.path.realpath(__file__)) + '/../etc/pyManDNS.cfg');

# Database connection
db_engine = config.get('Database','db.engine')
db_user = config.get('Database','db.user')
db_pass = config.get('Database','db.pass')
db_host = config.get('Database','db.host')
db_name = config.get('Database','db.name')

engine = create_engine('%s://%s:%s@%s/%s?charset=utf8&use_unicode=0' % (db_engine,db_user,db_pass,db_host,db_name), pool_recycle=3600, echo=False)

# 
# Instanciando Classes
#

pyTables = pyManDNS_Tables(engine)
groupts_table = pyTables.groups_table()
domains_table = pyTables.domains_table()
records_table = pyTables.records_table()
records_default_table = pyTables.records_default_table()
soa_table = pyTables.soa_table()
queue_table = pyTables.queue_table()
pyTables.create()

dir_db_files = config.get('Bind','dir.db_files')
pyZones = pyManDNS_Zones(engine,pyTables,dir_db_files)

pyToAPI = pyManDNS_ToAPI(engine,pyTables,pyZones)

# 
# Geracao de zonas
#

domains_result = engine.execute(domains_table.select())

for domain_row in domains_result:
    pyZones.create_db_file(domain_row.domain)

pyZones.create_zone_file(1);
pyZones.reload();

pyToAPI.startDomainWrapper()

server_host = config.get('Server','server.host')
server_port = config.get('Server','server.port')

server = SimpleXMLRPCServer((server_host, int(server_port)), allow_none=True)
server.register_instance(pyToAPI, True)

print 'Server started'

server.serve_forever()

